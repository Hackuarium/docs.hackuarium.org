"use strict";(self.webpackChunkdocs_hackuarium_org=self.webpackChunkdocs_hackuarium_org||[]).push([[6606],{3905:function(t,e,n){n.d(e,{Zo:function(){return m},kt:function(){return c}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var u=a.createContext({}),p=function(t){var e=a.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},m=function(t){var e=p(t.components);return a.createElement(u.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},s=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,u=t.parentName,m=i(t,["components","mdxType","originalType","parentName"]),s=p(n),c=r,k=s["".concat(u,".").concat(c)]||s[c]||d[c]||l;return n?a.createElement(k,o(o({ref:e},m),{},{components:n})):a.createElement(k,o({ref:e},m))}));function c(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,o=new Array(l);o[0]=s;var i={};for(var u in e)hasOwnProperty.call(e,u)&&(i[u]=e[u]);i.originalType=t,i.mdxType="string"==typeof t?t:r,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},2114:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return m},default:function(){return s}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),o=["components"],i={},u="Smart Slaves",p={unversionedId:"beemos/slaves",id:"beemos/slaves",isDocsHomePage:!1,title:"Smart Slaves",description:"A smart slave is an I2C slave that can be connected to a master board.",source:"@site/docs/15_beemos/slaves.md",sourceDirName:"15_beemos",slug:"/beemos/slaves",permalink:"/docs/beemos/slaves",editUrl:"https://github.com/hackuarium/docs.hackuarium.org/edit/main/docs/15_beemos/slaves.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Connector for luminosity, temperature and power supply",permalink:"/docs/beemos/bee-counter/rj12-hacking/rj12-hacking"},next:{title:"Goal of the project",permalink:"/docs/bioreactor"}},m=[{value:"Power consumption",id:"power-consumption",children:[]},{value:"Debugging",id:"debugging",children:[]},{value:"Logo",id:"logo",children:[]},{value:"CAM processing",id:"cam-processing",children:[]}],d={toc:m};function s(t){var e=t.components,n=(0,r.Z)(t,o);return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"smart-slaves"},"Smart Slaves"),(0,l.kt)("p",null,"A smart slave is an I2C slave that can be connected to a master board.\nThe slave will be usually be powered by the master board as well and may\nreceive 12V as well as anything between 3.6 and 6V. The idea is that\nthe slave will not get a regulated current and it could come from a\nsolar panel, a battery or a regulated power source."),(0,l.kt)("p",null,"Each slave will have a specific base I2C address that can be tuned\nusing the A0 and A1 jumper. By default it is the base address and you\nmay add repectively 1 or 2 by soldering A0 and A1."),(0,l.kt)("p",null,"The I2C bus should be free of any other devices. If some companents\nare using the I2C bus a software I2C library should be installed."),(0,l.kt)("h2",{id:"power-consumption"},"Power consumption"),(0,l.kt)("p",null,"The slave should be able to reach in sleep mode less than 25 \xb5A. This\nmeans that all the devices should be powered from the CPU in order to\ncompletely cut off the current."),(0,l.kt)("h2",{id:"debugging"},"Debugging"),(0,l.kt)("p",null,"A slave must have currently a crystal in order to work with external\nclock at 8MHz. This is not the default behaviour of the ATMEGA328 that\nworks on the internal clock. However it seems that the internal clock\nis not precise enough (up to 5% error ?) and therefore USART communication\nmay be very difficult."),(0,l.kt)("p",null,"USART communication (RX and TX) is mainly used for development and this part\ncould be removed later."),(0,l.kt)("p",null,"This is also the reason for the presence of the FTDI port."),(0,l.kt)("p",null,"We could get rid of the FTDI and 8MHz crystal if we don't need Serial communication\nand we don't need to debug the board anymore (i.e. for production)."),(0,l.kt)("h2",{id:"logo"},"Logo"),(0,l.kt)("p",null,"The logo of Hackuarium is present on the layer 200 and 201 in eagle. You may try\nto move it by hidding all the other layers."),(0,l.kt)("h2",{id:"cam-processing"},"CAM processing"),(0,l.kt)("p",null,"Before submitting the PCB for manufacturing like for ",(0,l.kt)("a",{parentName:"p",href:"https://www.pcbway.com"},"https://www.pcbway.com")," you need to\ngenerate the Gerber files."),(0,l.kt)("p",null,"The CAM processor for eagle starting 8.6 is present in this folder. They changed\ncompletely the format but what is cool is that you can now directly export the ZIP file.\nYou may remove from the silk layer 200 or 201 if the logo of hackuarium really does not\nfit.\nDon't forget to test the generated gerber by uploading it on ",(0,l.kt)("a",{parentName:"p",href:"https://gerber-viewer.easyeda.com/"},"https://gerber-viewer.easyeda.com/")),(0,l.kt)("h1",{id:"atmega328-pin-map"},"ATmega328 pin map"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Pin"),(0,l.kt)("th",{parentName:"tr",align:null},"Map to"),(0,l.kt)("th",{parentName:"tr",align:null},"Function"),(0,l.kt)("th",{parentName:"tr",align:null},"Remarks"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D0"),(0,l.kt)("td",{parentName:"tr",align:null},"PD0(RXD)"),(0,l.kt)("td",{parentName:"tr",align:null},"RX"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D1"),(0,l.kt)("td",{parentName:"tr",align:null},"PD1(TXD)"),(0,l.kt)("td",{parentName:"tr",align:null},"TX"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D2"),(0,l.kt)("td",{parentName:"tr",align:null},"PD2(INT0)"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Interrupt allows wake up")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D3"),(0,l.kt)("td",{parentName:"tr",align:null},"PD3(INT1)"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Interrupt allows wake up")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D4"),(0,l.kt)("td",{parentName:"tr",align:null},"PD4(XCK/T0)"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D5"),(0,l.kt)("td",{parentName:"tr",align:null},"PD5(T1)"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Counter")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D6"),(0,l.kt)("td",{parentName:"tr",align:null},"PD6(AIN0)"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D7"),(0,l.kt)("td",{parentName:"tr",align:null},"PD7(AIN1)"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D8"),(0,l.kt)("td",{parentName:"tr",align:null},"PB0(ICP)"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D9"),(0,l.kt)("td",{parentName:"tr",align:null},"PB1(OC1A)"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"PWM")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D10"),(0,l.kt)("td",{parentName:"tr",align:null},"PB2(SS/OC1B)"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"PWM")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D11"),(0,l.kt)("td",{parentName:"tr",align:null},"PB3(MOSI/OC2)"),(0,l.kt)("td",{parentName:"tr",align:null},"MOSI"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D12"),(0,l.kt)("td",{parentName:"tr",align:null},"PB4(MISO)"),(0,l.kt)("td",{parentName:"tr",align:null},"MISO"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D13"),(0,l.kt)("td",{parentName:"tr",align:null},"PB5(SCK)"),(0,l.kt)("td",{parentName:"tr",align:null},"SCK"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D14 A0"),(0,l.kt)("td",{parentName:"tr",align:null},"PC0(ADC0)"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"ADC")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D15 A1"),(0,l.kt)("td",{parentName:"tr",align:null},"PC1(ADC1)"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"ADC")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D16 A2"),(0,l.kt)("td",{parentName:"tr",align:null},"PC2/ADC2)"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"ADC")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D17 A3"),(0,l.kt)("td",{parentName:"tr",align:null},"PC3(ADC3)"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"ADC")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D18 A4"),(0,l.kt)("td",{parentName:"tr",align:null},"PC4(ADC4/SDA)"),(0,l.kt)("td",{parentName:"tr",align:null},"SDA"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D19 A5"),(0,l.kt)("td",{parentName:"tr",align:null},"PC5(ADC5/SCL)"),(0,l.kt)("td",{parentName:"tr",align:null},"SCL"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D20 A6"),(0,l.kt)("td",{parentName:"tr",align:null},"ADC6"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"ADC only input")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D21 A7"),(0,l.kt)("td",{parentName:"tr",align:null},"ADC7"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"ADC only input")))),(0,l.kt)("p",null,"Remarks"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"RX, TX used for serial communication over USB (debug)"),(0,l.kt)("li",{parentName:"ul"},"SDA, SCL: I2C communication with master"),(0,l.kt)("li",{parentName:"ul"},"MOSI, MISO, SCK: boot loader")))}s.isMDXComponent=!0}}]);